   * [COMBINE LARGE PDFS USING STAPLER](#combine-large-pdfs-using-stapler)
      * [Customize Stapler to be more verbose while combine large pdfs](#customize-stapler-to-be-more-verbose-while-combine-large-pdfs)
         * [MODIFY SOURCE CODE OF STAPLER**](#modify-source-code-of-stapler)
         * [MODIFY SOURCE CODE OF PyPDF2 python2**](#modify-source-code-of-pypdf2-python2)
         * [AFTER CHANGES THE OUTPUT OF STAPLER WILL BE**](#after-changes-the-output-of-stapler-will-be)
   * [Changes in source code of PyPDF2 for python3 for output to be more verbose:](#changes-in-source-code-of-pypdf2-for-python3-for-output-to-be-more-verbose)
   * [IMPORT AND EXPORT TOC FOR LARGE PDFS](#import-and-export-toc-for-large-pdfs)
      * [pdftk fails](#pdftk-fails)
      * [STEP1: Extract the bookmarks of large pdf](#step1-extract-the-bookmarks-of-large-pdf)
         * [STEP1A: Use mupdf to get into the flatten format**](#step1a-use-mupdf-to-get-into-the-flatten-format)
         * [STEP1B: Convert toc from flatten format to the format of PyPDF2 (i.e nested array)](#step1b-convert-toc-from-flatten-format-to-the-format-of-pypdf2-ie-nested-array)
      * [STEP2: IMPORT/PUT the bookmars from nested_array into the pdf](#step2-importput-the-bookmars-from-nested_array-into-the-pdf)
   * [Combining toc of multiple pdfs](#combining-toc-of-multiple-pdfs)
      * [STEP1: Combine the pdfs using stapler**](#step1-combine-the-pdfs-using-stapler)
      * [STEP2: Get the combined nested toc/outline python array**](#step2-get-the-combined-nested-tocoutline-python-array)
      * [STEP3: Using Combined.pdf and Total nested array of outline create Combined.pdf with toc**](#step3-using-combinedpdf-and-total-nested-array-of-outline-create-combinedpdf-with-toc)
   * [COMBINED CODE FOR MULTIPLE PDFS WITH TOC](#combined-code-for-multiple-pdfs-with-toc)
      * [SEPERATE](#seperate)
      * [AS BASH FILE](#as-bash-file)
